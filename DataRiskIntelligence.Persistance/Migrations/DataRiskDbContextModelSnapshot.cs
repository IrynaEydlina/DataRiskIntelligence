// <auto-generated />
using DataRiskIntelligence.Persistance;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataRiskIntelligence.Persistance.Migrations
{
    [DbContext(typeof(DataRiskDbContext))]
    partial class DataRiskDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.7");

            modelBuilder.Entity("DataRiskIntelligence.Domain.Entities.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("People");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Andrew",
                            LastName = "Hendrixson"
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Coco",
                            LastName = "Chanel"
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "Albert",
                            LastName = "Einstein"
                        },
                        new
                        {
                            Id = 4,
                            FirstName = "Brian",
                            LastName = "Tracy"
                        },
                        new
                        {
                            Id = 5,
                            FirstName = "Grace",
                            LastName = "Coddington"
                        },
                        new
                        {
                            Id = 6,
                            FirstName = "Henry David",
                            LastName = "Thoreau"
                        },
                        new
                        {
                            Id = 7,
                            FirstName = "Unknown",
                            LastName = "Unknown"
                        },
                        new
                        {
                            Id = 8,
                            FirstName = "Abraham",
                            LastName = "Lincoln"
                        },
                        new
                        {
                            Id = 9,
                            FirstName = "Robin",
                            LastName = "Shaurma"
                        },
                        new
                        {
                            Id = 10,
                            FirstName = "Anaïs",
                            LastName = "Nin"
                        });
                });

            modelBuilder.Entity("DataRiskIntelligence.Domain.Entities.Quote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("PersonId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Text")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("Quotes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PersonId = 1,
                            Text = "Anyone who has ever made anything of importance was disciplined."
                        },
                        new
                        {
                            Id = 2,
                            PersonId = 2,
                            Text = "Don’t spend time beating on a wall, hoping to transform it into a door."
                        },
                        new
                        {
                            Id = 3,
                            PersonId = 3,
                            Text = "Creativity is intelligence having fun."
                        },
                        new
                        {
                            Id = 4,
                            PersonId = 4,
                            Text = "Optimism is the one quality more associated with success and happiness than any other."
                        },
                        new
                        {
                            Id = 5,
                            PersonId = 5,
                            Text = "Always keep your eyes open. Keep watching. Because whatever you see can inspire you."
                        },
                        new
                        {
                            Id = 6,
                            PersonId = 6,
                            Text = "What you get by achieving your goals is not as important as what you become by achieving your goals."
                        },
                        new
                        {
                            Id = 7,
                            PersonId = 7,
                            Text = "If the plan doesn’t work, change the plan, but never the goal."
                        },
                        new
                        {
                            Id = 8,
                            PersonId = 8,
                            Text = "I destroy my enemies when I make them my friends."
                        },
                        new
                        {
                            Id = 9,
                            PersonId = 9,
                            Text = "Don’t live the same year 75 times and call it a life."
                        },
                        new
                        {
                            Id = 10,
                            PersonId = 10,
                            Text = "You cannot save people, you can just love them."
                        });
                });

            modelBuilder.Entity("DataRiskIntelligence.Domain.Entities.Quote", b =>
                {
                    b.HasOne("DataRiskIntelligence.Domain.Entities.Person", "Person")
                        .WithMany("Quotes")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("DataRiskIntelligence.Domain.Entities.Person", b =>
                {
                    b.Navigation("Quotes");
                });
#pragma warning restore 612, 618
        }
    }
}
